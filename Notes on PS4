Python for Everybody, Chapter 13: Using Web Services in Python
Documents can be specifically designed to be consumed by other programs. Two common formats are eXtensible Markup Language (XML) for document style data and JavaScript Object Notation (JSON) for exchanging dictionaries, lists, or other internal information with each program. XML documents can be seen as a tree structure with an element or node. The tags to the main element are seen as children to those parent elements. Certain codes can be used to extract data and loops can be used to go through all the nodes. JSON structures tend to be simpler than XML because JSON has fewer capabilities. It was also created after Python and uses the same notations. It is a natural format to cooperate two programs to exchange data. This makes parsing and data extraction more direct. However, XML is more descriptive although it is complex. 

Application Programming Interfaces (API)
	XML and JSON allows us to exchange data between applications using Hyper Text Transport Protocol (HTTP). To define contracts between application using these techniques we use Application Program Interfaces (APIs). In an API, one program makes a set of services available for use by other applications and publishes the APIs or rules that must be followed to access the services provided by the program. A Service oriented architecture (SOA) is when the programs are built to access services provided by other programs.

In problem set 4, I seek use the NASA API: Astronomy Picture of the Day (APOD) to extract data on the photo for 2022-11-01.
